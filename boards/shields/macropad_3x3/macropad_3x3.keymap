/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_nav {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&tog 1>;
        };
        combo_hotkey {
            timeout-ms = <50>;
            key-positions = <4 5 6>;  // middle column keys
            bindings = <&tog 2>;       // momentarily activate layer 2
        };
        combo_media {
            timeout-ms = <50>;
            key-positions = <7 8 9>;  // top row keys (7 8 9)
            bindings = <&tog 3>;      // toggle layer 3 (media layer)
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------
// | 7      |  8  |  9  |
// | 4      |  5  |  6  |
// | 1      |  2  |  3  |
// -------------------
            bindings = <
    &kp N7 &kp N8 &kp N9
    &kp N4 &kp N5 &kp N6
    &kp N1 &kp N2 &kp N3
            >;
        };

        nav_layer {
// -----------------------
// | BTNXT |  HOME  |  PGUP  |
// | BTPRV |  END   |  PGDN  |
// | BTCLR |  _     |  _     |
// -----------------------
            bindings = <
    &bt BT_NXT &kp HOME &kp PG_UP
    &bt BT_PRV &kp END  &kp PG_DN
    &bt BT_CLR &trans   &trans
            >;
        };

        hotkey_layer {
// -----------------------------
// | Ctrl+C | Ctrl+V | Ctrl+X   |
// | Ctrl+Z | Ctrl+Y | Ctrl+S   |
// | C-S-T  | C-S-N  | Ctrl+A   |
// -----------------------------
            bindings = <
    &kp LC(C)     &kp LC(V)     &kp LC(X)
    &kp LC(Z)     &kp LC(Y)     &kp LC(S)
    &kp LC(LS(T)) &kp LC(LS(N)) &kp LC(A)
            >;
        };

        media_layer {
// -----------------------------
// | Vol Up  | Play/Pause | Vol Dn |
// | Prev    | Mute       | Next   |
// | BRI Up  | BRI Dn     | Stop   |
// -----------------------------
            bindings = <
    &kp C_VOL_UP &kp C_PP    &kp C_VOL_DN
    &kp C_PREV   &kp C_MUTE  &kp C_NEXT  
    &kp C_BRI_UP &kp C_BRI_DN &kp C_STOP
            >;
        };
    };
};